security:
    encoders:
        App\Entity\Utilisateur:
            algorithm: auto
    role_hierarchy:
        ROLE_GUEST: ROLE_GUEST
        ROLE_USER: [ROLE_USER]
        ROLE_ADMIN: [ROLE_USER, ROLE_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_SUPER_ADMIN]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        users:
            name: user_provider
            entity:
                class: App\Entity\Utilisateur
                property: email
        in_memory: { memory: ~ }

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
            pattern: ^/
            form_login:
                login_path: login
                check_path: login
                default_target_path: onAuthenticationSuccess
                username_parameter: _email
                provider: user_provider
                # default_target_path: index_participant
                always_use_default_target_path: true
                csrf_token_generator: security.csrf.token_manager
            logout:
                path: logout
                target: login
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/, roles: IS_AUTHENTICATED_REMEMBERED }

        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/onAuthenticationSuccess, role: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/utilisateur/edit, role: IS_AUTHENTICATED_ANONYMOUSLY}
        - { path: ^/utilisateur/list, role: ROLE_ADMIN}
        - { path: ^/guest, role: ROLE_GUEST}
        - { path: ^/, role: ROLE_USER}
